---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

// Out out of pre-rendering (to use SSR)
export const prerender = false;
// Get data when page is rendered
// Test data
// const response = await fetch("https://randomuser.me/api/");
// const data = await response.json();
// const randomUser = data.results[0];

// const test = await import.meta.env.FD_AUTH_TOKEN;

import { get } from "./api/matches.js";
import { date } from "astro:schema";
const data = await get();
// const matches = Array.from(data.matches);
// console.log(matches);
// const matchExample = body.data.matches[0].awayTeam.shortName;
---

<Layout title="Welcome to Astro.">
  <main>
    <!-- <h1>{matches}</h1> -->
    <!-- <h1>User</h1>
    <h2>{randomUser.name.first} {randomUser.name.last}</h2>
    <h3>{randomUser.location.city}, {randomUser.location.country}</h3> -->
    <h1>Attie</h1>

    <div role="list" class="link-card-grid">
      {
        data.map((match) => (
          <Card
            matchDate={match.utcDate}
            homeCrest={match.homeTeam.crest}
            awayCrest={match.awayTeam.crest}
            homeName={match.homeTeam.shortName}
            homeScore={match.score.fullTime.home}
            awayName={match.awayTeam.shortName}
            awayScore={match.score.fullTime.away}
          />
        ))
      }
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
